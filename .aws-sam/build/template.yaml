AWSTemplateFormatVersion: '2010-09-09'
Description: sam-api
Transform: AWS::Serverless-2016-10-31
Parameters:
  Env:
    Type: String
    AllowedValues:
    - LOCAL
    - AWS
    Default: LOCAL
    Description: Dev will run with local resources and Prod will run with cloud provisioned
      resources
Resources:
  processDbTransactions:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/streamproc.processDbStream
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple lambda to print out the dynamodb stream
      Policies:
      - DynamoDBStreamReadPolicy:
          TableName:
            Ref: DeviceDdbTable
          StreamName:
            Fn::GetAtt:
            - DeviceDdbTable
            - StreamArn
      Environment:
        Variables:
          DEVICE_TABLE:
            Ref: DeviceDdbTable
          AWSENV:
            Ref: Env
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - DeviceDdbTable
              - StreamArn
            BatchSize: 100
            StartingPosition: TRIM_HORIZON
      CodeUri: processDbTransactions
    Metadata:
      SamResourceId: processDbTransactions
  asyncTest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/test.asyncTest
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Test async function
      CodeUri: asyncTest
    Metadata:
      SamResourceId: asyncTest
  syncTest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/test.syncTest
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Test sync function
      CodeUri: syncTest
    Metadata:
      SamResourceId: syncTest
  getAllReadings:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-handler.getAllItems
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceDdbTable
      Environment:
        Variables:
          DEVICE_TABLE:
            Ref: DeviceDdbTable
          AWSENV:
            Ref: Env
      Events:
        Api:
          Type: Api
          Properties:
            Path: /readings
            Method: GET
      CodeUri: getAllReadings
    Metadata:
      SamResourceId: getAllReadings
  getDeviceReadingById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-handler.getItemById
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceDdbTable
      Environment:
        Variables:
          DEVICE_TABLE:
            Ref: DeviceDdbTable
          AWSENV:
            Ref: Env
      Events:
        Api:
          Type: Api
          Properties:
            Path: /readings/{id}
            Method: GET
      CodeUri: getDeviceReadingById
    Metadata:
      SamResourceId: getDeviceReadingById
  deleteDeviceReadingById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/delete-handler.deleteItem
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceDdbTable
      Environment:
        Variables:
          DEVICE_TABLE:
            Ref: DeviceDdbTable
          AWSENV:
            Ref: Env
      Events:
        Api:
          Type: Api
          Properties:
            Path: /readings/{id}
            Method: DELETE
      CodeUri: deleteDeviceReadingById
    Metadata:
      SamResourceId: deleteDeviceReadingById
  insertDeviceReading:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-handler.insertDeviceReading
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceDdbTable
      Tags:
        cdxp:owner: chobbins
        cdxp:env: sbx
        cdxp:project: sam deployment poc
      Environment:
        Variables:
          DEVICE_TABLE:
            Ref: DeviceDdbTable
          AWSENV:
            Ref: Env
      Events:
        Api:
          Type: Api
          Properties:
            Path: /readings
            Method: POST
      CodeUri: insertDeviceReading
    Metadata:
      SamResourceId: insertDeviceReading
  DeviceDdbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Devices
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
      - AttributeName: ID
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      - AttributeName: LOC_REG
        AttributeType: S
      - AttributeName: LOC_SK
        AttributeType: S
      KeySchema:
      - AttributeName: ID
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: location-index
        KeySchema:
        - AttributeName: LOC_REG
          KeyType: HASH
        - AttributeName: LOC_SK
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 2
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      BillingMode: PROVISIONED
      Tags:
      - Key: cdxp:owner
        Value: chobbins
      - Key: cdxp:env
        Value: sbx
      - Key: cdxp:project
        Value: sam deployment poc
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
